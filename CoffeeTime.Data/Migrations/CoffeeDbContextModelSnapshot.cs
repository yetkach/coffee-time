// <auto-generated />
using System;
using CoffeeTime.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeTime.Data.Migrations
{
    [DbContext(typeof(CoffeeDbContext))]
    partial class CoffeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeeTime.Data.Entities.CheckTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CheckTimes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeletionTime = new DateTime(2021, 5, 12, 19, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.Coffee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CupCap")
                        .HasColumnType("bit");

                    b.Property<bool>("Milk")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sugar")
                        .HasColumnType("int");

                    b.Property<string>("Volume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Coffees");
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.CoffeeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoffeeData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "/img/americano.png",
                            Name = "Americano"
                        },
                        new
                        {
                            Id = 2,
                            Image = "/img/latte.png",
                            Name = "Latte"
                        },
                        new
                        {
                            Id = 3,
                            Image = "/img/espresso.png",
                            Name = "Espresso"
                        });
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GuidId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCheckedOut")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.PriceData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VolumeDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VolumeDataId")
                        .IsUnique();

                    b.ToTable("PriceData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 3.5m,
                            VolumeDataId = 1
                        },
                        new
                        {
                            Id = 2,
                            Price = 4m,
                            VolumeDataId = 2
                        },
                        new
                        {
                            Id = 3,
                            Price = 4.5m,
                            VolumeDataId = 3
                        },
                        new
                        {
                            Id = 4,
                            Price = 4.4m,
                            VolumeDataId = 4
                        },
                        new
                        {
                            Id = 5,
                            Price = 5.2m,
                            VolumeDataId = 5
                        },
                        new
                        {
                            Id = 6,
                            Price = 4.2m,
                            VolumeDataId = 6
                        },
                        new
                        {
                            Id = 7,
                            Price = 5.4m,
                            VolumeDataId = 7
                        });
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.VolumeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoffeeDataId")
                        .HasColumnType("int");

                    b.Property<string>("Volume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeDataId");

                    b.ToTable("VolumeData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoffeeDataId = 1,
                            Volume = "0.133 L"
                        },
                        new
                        {
                            Id = 2,
                            CoffeeDataId = 1,
                            Volume = "0.250 L"
                        },
                        new
                        {
                            Id = 3,
                            CoffeeDataId = 1,
                            Volume = "0.500 L"
                        },
                        new
                        {
                            Id = 4,
                            CoffeeDataId = 2,
                            Volume = "0.133 L"
                        },
                        new
                        {
                            Id = 5,
                            CoffeeDataId = 2,
                            Volume = "0.250 L"
                        },
                        new
                        {
                            Id = 6,
                            CoffeeDataId = 3,
                            Volume = "0.133 L"
                        },
                        new
                        {
                            Id = 7,
                            CoffeeDataId = 3,
                            Volume = "0.250 L"
                        });
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.Coffee", b =>
                {
                    b.HasOne("CoffeeTime.Data.Entities.Order", null)
                        .WithMany("CoffeeCartItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.PriceData", b =>
                {
                    b.HasOne("CoffeeTime.Data.Entities.VolumeData", null)
                        .WithOne("PriceData")
                        .HasForeignKey("CoffeeTime.Data.Entities.PriceData", "VolumeDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.VolumeData", b =>
                {
                    b.HasOne("CoffeeTime.Data.Entities.CoffeeData", null)
                        .WithMany("Volumes")
                        .HasForeignKey("CoffeeDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.CoffeeData", b =>
                {
                    b.Navigation("Volumes");
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.Order", b =>
                {
                    b.Navigation("CoffeeCartItems");
                });

            modelBuilder.Entity("CoffeeTime.Data.Entities.VolumeData", b =>
                {
                    b.Navigation("PriceData");
                });
#pragma warning restore 612, 618
        }
    }
}
